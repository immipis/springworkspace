<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 -->
	<select id="selectEmpList" resultType="EmpVO">
		SELECT
		EMPLOYEE_ID,
		FIRST_NAME,
		LAST_NAME,
		EMAIL,
		PHONE_NUMBER,
		HIRE_DATE,
		JOB_ID,
		SALARY,
		COMMISSION_PCT,
		MANAGER_ID,
		DEPARTMENT_ID
		FROM EMPLOYEES
		ORDER BY EMPLOYEE_ID
	</select>
	<!-- 단건조회 -->
	<select id="selectEmpInfo" parameterType="EmpVO"
		resultType="EmpVO">
		SELECT
		EMPLOYEE_ID,
		FIRST_NAME,
		LAST_NAME,
		EMAIL,
		PHONE_NUMBER,
		HIRE_DATE,
		JOB_ID,
		SALARY,
		COMMISSION_PCT,
		MANAGER_ID,
		DEPARTMENT_ID
		FROM EMPLOYEES
		WHERE EMPLOYEE_ID = #{employeeId}
		ORDER BY EMPLOYEE_ID
		<!-- Mybatis => PrepareStatement => 데이터 타입에 따른 작업 -->
		<!-- #{} = ? 대체, parameterType(파라미터가)가진 필드값을 가져옴 "" 자동으로 붙음 -->
	</select>

	<insert id="insertEmpInfo" parameterType="EmpVO">
		INSERT INTO
		employees
		(
		employee_id
		, last_name
		, email
		, job_id
		, hire_date
		<if test="salary > 0">
			, salary
		</if>
		)
		VALUES
		(
		employees_seq.NEXTVAL
		, #{lastName}
		, #{email}
		, #{jobId}
		<choose>
			<when test="hireDate != null">#{hireDate}</when>
			<otherwise>, sysDate</otherwise>
		</choose>

		<if test="salary > 0">
			, #{salary}
		</if>

		)
	</insert>
	<update id="updateEmpInfo" parameterType="EmpVO">
		UPDATE employees
		SET
		last_name = #{lastName}
		<if test="jobId != null and !jobId.equals('')">
			<!-- 특정 조건을 만족할때만 실행되는 구문 -->
			, job_id = #{jobId}
		</if>
		<if test="hireDate != null">
			, hire_date = #{hireDate}
		</if>
		WHERE employee_id = #{employeeId}
	</update>

	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		WHERE employee_id = #{empId}
		<!-- 객체가 아닌 기본 타입일 경우 매개변수 그대로 사용 -->
	</delete>
</mapper>